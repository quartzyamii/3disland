/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, forwardRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber';
import { a } from '@react-spring/three';

import SightScene from '/assets/3d/Sight.gltf?url';  

const Sight = forwardRef((props, ref) => {  
  const { nodes, materials } = useGLTF(SightScene);  
  console.log(nodes, materials);

  return (
    <a.group ref={ref} {...props}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Flower.geometry}
        material={materials.Flower}
        position={[0.003, 1.211, 0.063]}
        scale={0.531}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle002.geometry}
        material={materials.Circle}
        position={[0.004, 1.102, -0.303]}
        rotation={[-0.268, -0.035, -0.006]}
        scale={0.074}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle001.geometry}
        material={materials.Circle}
        position={[0.365, 1.1, -0.051]}
        rotation={[-0.08, -0.013, -0.242]}
        scale={0.074}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle003.geometry}
        material={materials.Circle}
        position={[-0.217, 1.102, 0.367]}
        rotation={[0.236, -0.061, 0.169]}
        scale={0.074}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.MainFish.geometry}
        material={materials.MainFish}
        position={[-0.527, 0.223, -1.606]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.037, 0.127, 0.095]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sight.geometry}
        material={materials.Sight}
        position={[0, 0.485, 0.063]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Fish.geometry}
        material={materials.Fish}
        position={[0.482, 0.402, -1.193]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.037, 0.127, 0.095]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Line.geometry}
        material={materials.Line}
        scale={0.993}
      />
    </a.group>
  )
});

Sight.displayName = 'Sight';

export default Sight;
useGLTF.preload('/Sight.gltf')
