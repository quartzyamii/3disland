/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber';
import { a } from '@react-spring/three';
import * as THREE from 'three'; 

import KeyRingScene from '/assets/3d/KeyRing.gltf?url';  


const KeyRing = (props) => {  
  const KeyRingRef = useRef();  

  const { nodes, materials } = useGLTF(KeyRingScene);  
  console.log(nodes, materials);

  return (
    <a.group ref={KeyRingRef} {...props}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KeyRing.geometry}
        material={materials.KeyRingMetal}
        scale={[0.496, 0.282, 0.496]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KeyRingHandle.geometry}
        material={materials.KeyRingMetal}
        position={[-0.61, 0, 0]}
        rotation={[0.085, -0.058, -0.317]}
        scale={0.06}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KeyRingAx.geometry}
        material={materials.KeyRingMetal}
        position={[0.623, -0.032, 0]}
        rotation={[-1.571, 0, 0]}
        scale={[0.039, 0.083, 0.039]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KeyRingAx002.geometry}
        material={materials.KeyRingMetal}
        position={[0.575, -0.032, 0.134]}
        scale={[-0.022, -0.032, -0.032]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mappping.geometry}
        material={materials.Mapping}
        position={[0, -0.032, 0]}
        scale={0.495}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.DRing.geometry}
        material={materials.DRing}
        position={[-0.008, -0.001, -0.701]}
        rotation={[0, 0, -0.884]}
        scale={0.052}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.DRing002.geometry}
        material={materials.DRing}
        position={[0.016, -0.008, -0.801]}
        rotation={[-3.142, 0, 2.455]}
        scale={[0.04, 0.096, 0.04]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Dring003.geometry}
        material={materials.DRing}
        position={[0.004, 0.006, -0.765]}
        rotation={[-1.571, 0.884, 0]}
        scale={[0.038, 0.067, 0.038]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ORing.geometry}
        material={materials.DRing}
        position={[-0.026, 0, -1.162]}
        rotation={[0, 0, -0.528]}
        scale={[0.229, 0.032, 0.245]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ORingSmall.geometry}
        material={materials.DRing}
        position={[0.002, -0.001, -0.888]}
        rotation={[0, 0, -1.045]}
        scale={0.22}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.DRing001.geometry}
        material={materials.DRing}
        position={[0, 0.002, -0.745]}
        rotation={[-1.571, 0.938, 3.142]}
        scale={[0.052, 0.026, 0.041]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KeyRingloop.geometry}
        material={materials.DRing}
        position={[0, 0, -0.61]}
        rotation={[0, -1.571, 0]}
        scale={0.059}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Diamond003.geometry}
        material={new THREE.MeshStandardMaterial({
        emissive: 0xffff00,              // 발광 색상을 노란색으로 설정 (0xffff00)
        emissiveIntensity: 0.01,          // 발광 강도 설정 (1.5로 설정하여 강한 발광 효과)
        color: materials.BlueDiamond.color, // 기존 색상 그대로 사용
        transparent: true,               // 투명도를 활성화
        opacity: 0.7,                    // 투명도 값 (0: 완전 투명, 1: 불투명)
  })}
        position={[0.258, -0.028, -0.085]}
        rotation={[0, 1.42, 0]}
        scale={0.211}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Diamond002.geometry}
        material={new THREE.MeshStandardMaterial({
        emissive: 0xffff00,              // 발광 색상을 노란색으로 설정 (0xffff00)
        emissiveIntensity: 0.01,          // 발광 강도 설정 (1.5로 설정하여 강한 발광 효과)
        color: materials.RedDiamond.color, // 기존 색상 그대로 사용
        transparent: true,               // 투명도를 활성화
        opacity: 0.7,                    // 투명도 값 (0: 완전 투명, 1: 불투명)
  })}
        position={[-0.185, -0.028, -0.216]}
        rotation={[Math.PI, -1.119, Math.PI]}
        scale={0.227}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Diamond001.geometry}
        material={new THREE.MeshStandardMaterial({
        emissive: 0xffff00,              // 발광 색상을 노란색으로 설정 (0xffff00)
        emissiveIntensity: 0.01,          // 발광 강도 설정 (1.5로 설정하여 강한 발광 효과)
        color: materials.YelloDiamond.color, // 기존 색상 그대로 사용
        transparent: true,               // 투명도를 활성화
        opacity: 0.7,                    // 투명도 값 (0: 완전 투명, 1: 불투명)
  })}
        position={[0.104, -0.028, -0.328]}
        rotation={[-Math.PI, 0.445, -Math.PI]}
        scale={0.217}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Diamond.geometry}
        material={materials['Diamond.001']}
        position={[-0.033, 0.009, 0.27]}
        rotation={[0, -0.372, 0]}
        scale={0.186}
      />
    </a.group>
  )
}

export default KeyRing;
// useGLTF.preload('/KeyRing.gltf')
